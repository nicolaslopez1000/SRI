@model SRI.Models.ViewModels.IncidenteMailVM

@{
    ViewBag.Title = "Crear incidente Mail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("Create", "IncidenteMail"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Nuevo Incidente de tipo Mail</h3>
        <br />
        @Html.Partial("_PalabrasClave")
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fecha_suceso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_suceso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_suceso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emocion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.emocion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emocion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resolucion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resolucion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resolucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.palabrasClave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.palabrasClave, new { htmlAttributes = new { @class = "form-control palabrasClaveEditor" } })
                @Html.ValidationMessageFor(model => model.palabrasClave, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.asunto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.asunto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.asunto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.respuesta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.respuesta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.respuesta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contenido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contenido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contenido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.remitente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.remitente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.remitente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.destinatariosCc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.destinatariosCc, new { htmlAttributes = new { @class = "form-control destinatarioCcEditor" } })
                @Html.ValidationMessageFor(model => model.destinatariosCc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group hidden">
            @Html.LabelFor(model => model.destinatariosTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.destinatariosTo, new { htmlAttributes = new { @class = "form-control destinatarioToEditor" } })
                @Html.ValidationMessageFor(model => model.destinatariosTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>

            <h4> Destinatarios</h4>

            <input type="text" id="destinatariosInput" />

            <button class="btn btn-outline-secondary" onclick="agregarDestinatarioTo()" type="button">Agregar To</button>

            <button class="btn btn-outline-secondary" onclick="agregarDestinatarioCc()" type="button">Agregar Cc</button>


            <br />
            <br />

            <div class="list-group col-md-6 destinatariosToList">
                <h4>To</h4>
            </div>

            
            <div class="list-group  col-md-6 destinatariosCcList">
                <h4>Cc</h4>
            </div>

        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}



@section Scripts{
    <script>

        var destinatariosCc = []
        var destinatariosTo = []



        function agregarDestinatarioTo() {

            var val = $("#destinatariosInput").val();

            destinatariosTo.push(val)

            var destinatariosToJoin = destinatariosTo.join()

            $(".destinatarioToEditor").val(destinatariosToJoin)

            $(".destinatariosToList").append('<div class="well">' + val + '<button type="button" style="float: right" class="btn btn - danger float - right removeTo" value="' + val + '">X</button></div>')

            $("#destinatariosInput").val("");

        }

        function agregarDestinatarioCc() {

            var val = $("#destinatariosInput").val();
            destinatariosCc.push(val)
            var destinatariosCcJoin = destinatariosCc.join()
            $(".destinatarioCcEditor").val(destinatariosCcJoin)



            $(".destinatariosCcList").append('<div class="well">' + val + '<button type="button" style="float: right" class="btn btn - danger float - right removeCc" value="' + val + '">X</button></div>')

            $("#destinatariosInput").val("");

        }


        
        $(document).on("click", "button.removeTo", function () {

            $(this).parent().remove();
            removeVal = $(this).val()
            destinatariosTo = destinatariosTo.filter(e => e !== removeVal);
            $(".destinatarioToEditor").val(destinatariosTo)


        });

        $(document).on("click", "button.removeCc", function () {

            $(this).parent().remove();
            removeVal = $(this).val()
            destinatariosCc = destinatariosCc.filter(e => e !== removeVal);
            $(".destinatarioCcEditor").val(destinatariosCc)


        });

    </script>
}

<div>
    @Html.ActionLink("Volver a el menú de selección", "Index", "Incidente")
</div>

