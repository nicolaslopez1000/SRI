@model SRI.Models.ViewModels.IncidenteVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Crear Incidente</h2>
<hr>


<h4>Tipo de incidente</h4>
<select id="select-incident" class="form-control">

    <option value="normal">Default</option>
    <option value="llamado">Llamado</option>
    <option value="wpp">Chat de WhatsApp</option>
    <option value="mail">Mail</option>

</select>
<br />
<br />


<div>

    <h4> Palabras Clave</h4>

    <input type="text" id="palabraClaveinput" />

    <button class="btn btn-outline-secondary" onclick="agregarPalabraClave()" type="button">Agregar</button>

    <br />
    <br />

    <div id="palabraClaveList" class="list-group">
    </div>

</div>

<br />
<br />


<div id="normal">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Incidente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fecha_suceso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_suceso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_suceso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.palabrasClave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.palabrasClave, new { htmlAttributes = new { @class = "form-control palabrasClaveEditor" } })
                @Html.ValidationMessageFor(model => model.palabrasClave, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.fecha_suceso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_suceso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_suceso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emocion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.emocion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emocion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resolucion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resolucion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resolucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

</div>


<div id="llamado" hidden>

    @RenderPage("~/Views/IncidenteLlamado/create.cshtml")

</div>

<div id="wpp" hidden>

    @RenderPage("~/Views/IncidenteMail/create.cshtml")

</div>

<div id="mail" hidden>

    @RenderPage("~/Views/IncidenteChatWpp/create.cshtml")

</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>




@section Scripts
{
    <script>


        var identificador = 0
        var palabrasClave = []

        $("#select-incident").change(function () {

            var type = $('select[id=select-incident] option').filter(':selected').val();


            $("#normal").hide();
            $("#wpp").hide();
            $("#llamado").hide();
            $("#mail").hide();


            $("#" + type).show();


        });


        function agregarPalabraClave() {

            var val = $("#palabraClaveinput").val();
            palabrasClave.push(val)
            palabrasClaveJoin = palabrasClave.join()
            $(".palabrasClaveEditor").val(palabrasClaveJoin)

            $("#palabraClaveList").append('<div class="well">' + val + '<button type="button" style="float: right" class="btn btn - danger float - right remove" value="' + val + '">X</button></div>')


        }


        $(document).on("click", "button.remove", function () {
            
            $(this).parent().remove();
            removeVal = $(this).val()
            palabrasClave = palabrasClave.filter(e => e !== removeVal);
            $(".palabrasClaveEditor").val(palabrasClaveJoin)


        });

       


    </script>
}
